---
apiVersion: v1
kind: Service
metadata:
  name: kad
  namespace: kad
spec:
  type: NodePort
  #externalTrafficPolicy: Local
  selector:
    app: kad
  ports:
  - protocol: TCP
    targetPort: 5000
    port: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kad
  namespace: kad
data:
  config.yml: |
    abc: 123
    password: datascript
  color: white
---
apiVersion: v1
kind: Secret
metadata:
  name: credentials
  namespace: kad
type: Opaque
data:
  username: YWRtaW4=
  password: d29ya3Nob3BTRA==
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kad
  namespace: kad
spec:
  selector:
    matchLabels:
      app: kad
  template:
    metadata:
      labels:
        app: kad
    spec:
      #affinity:
      #  podAntiAffinity:
      #    requiredDuringSchedulingIgnoredDuringExecution:
      #    - labelSelector:
      #        matchExpressions:
      #        - key: app
      #          operator: In
      #          values:
      #          - kad
      #      topologyKey: "kubernetes.io/hostname"
      #initContainers:
      #- name: connectivity-check
      #  image: tomkukral/kad
      #  command: ["bash", "-c", "ping -c1 google.com"]
      containers:
      - name: app
        image: tomkukral/kad
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        command: ["/bin/kad", "--color", "$(COLOR)"]
        env:
        # static configuration from yaml
        - name: REDIS_SERVER
          value: redis-0.redis:6379
        # configuration from downward API
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: RECORD
          value: "$(POD_NAME) IN A $(POD_IP)"
        # variable form configmap
        - name: COLOR
          valueFrom:
            configMapKeyRef:
              name: kad
              key: color
        # variables from secret
        - name: USERNAME
          valueFrom:
            secretKeyRef:
              name: credentials
              key: username
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: credentials
              key: password
        resources:
          limits:
            cpu: 100m
            memory: 32Mi
        livenessProbe:
          httpGet:
            path: /check/live
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /check/ready
            port: 5000
          initialDelaySeconds: 1
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        lifecycle:
          postStart:
            exec:
              command: ["sh", "-c", "date > /tmp/started"]
          preStop:
            httpGet:
              path: "/action/terminate"
              port: 5001
        volumeMounts:
        - name: config
          mountPath: /etc/kad/
      volumes:
      - name: config
        configMap:
          name: kad
          items:
          - key: config.yml
            path: config.yml
