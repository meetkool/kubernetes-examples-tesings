---
apiVersion: v1
kind: Namespace
metadata: 
  name: argo
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deploy-bot
  namespace: argo
---
# Add cluster-admin role to user admin
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: deploy-bot-cluster-admin
  namespace: argo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: deploy-bot
  namespace: argo
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: kubernetes-examples
  namespace: argo
spec:
  type: git
  params:
  - name: url
    value: https://github.com/tomkukral/kubernetes-examples.git
  - name: revision
    value: master
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deploy-argocd
  namespace: argo
spec:
  resources:
    inputs:
    - name: kubernetes-examples
      type: git
      optional: false
  steps:
  - name: deploy
    # TODO: will this work with rate limiting on docker hub?
    image: lachlanevenson/k8s-kubectl
    command: ["kubectl"]
    args:
    - apply 
    - -k
    - /workspace/kubernetes-examples/argo/cd

  - name: wait
    image: lachlanevenson/k8s-kubectl
    command: ["kubectl"]
    args:
    - wait 
    - --for=condition=available 
    - --timeout=180s 
    - deployment/argocd-server
    - -n 
    - argo
---
#apiVersion: tekton.dev/v1beta1
#kind: TaskRun
#metadata:
#  name: deploy-argocd
#  namespace: argo
#spec:
#  serviceAccountName: deploy-bot
#  taskRef:
#    name: deploy-argocd
#  resources:
#    inputs:
#    - name: kubernetes-examples
#      resourceRef:
#        name: kubernetes-examples
